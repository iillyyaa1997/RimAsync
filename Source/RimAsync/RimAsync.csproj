<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <AssemblyName>RimAsync</AssemblyName>
    <RootNamespace>RimAsync</RootNamespace>
    <LangVersion>9.0</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>
    <!-- Disable automatic inclusion of C# files for explicit control -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <!-- NuGet Packages - single reference -->
  <ItemGroup>
    <PackageReference Include="Lib.Harmony" Version="2.2.2" />
  </ItemGroup>

  <!-- RimWorld Reference Assemblies -->
  <ItemGroup Condition="Exists('$(RimWorldInstallDir)')">
    <!-- Local development with RimWorld installed -->
    <Reference Include="0Harmony">
      <HintPath>$(RimWorldInstallDir)\RimWorldWin64_Data\Managed\0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(RimWorldInstallDir)\RimWorldWin64_Data\Managed\Assembly-CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(RimWorldInstallDir)\RimWorldWin64_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>

  <!-- Docker build - use copied assemblies -->
  <ItemGroup Condition="!Exists('$(RimWorldInstallDir)') And Exists('/app/RimWorldLibs')">
    <Reference Include="0Harmony">
      <HintPath>/app/RimWorldLibs/0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>/app/RimWorldLibs/Assembly-CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>/app/RimWorldLibs/UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>

  <!-- Mock references for Docker when RimWorld libs not available -->
  <ItemGroup Condition="!Exists('$(RimWorldInstallDir)') And !Exists('/app/RimWorldLibs')">
    <Compile Include="../MockReferences/**/*.cs" />
  </ItemGroup>

  <!-- Source Files - based on actual file structure -->
  <ItemGroup>
    <Compile Include="Core/RimAsyncCore.cs" />
    <Compile Include="Core/RimAsyncMod.cs" />
    <Compile Include="Threading/AsyncManager.cs" />
    <Compile Include="Patches/RW_Patches/Pawn_PathFollower_Patch.cs" />
    <Compile Include="Patches/RW_Patches/Game_Patch.cs" />
    <Compile Include="Patches/Performance_Patches/TickManager_Patch.cs" />
    <Compile Include="Patches/Multiplayer_Patches/MultiplayerCompat_Patch.cs" />
    <Compile Include="Patches/Mod_Patches/ExampleMod_Patch.cs" />
    <Compile Include="Components/RimAsyncGameComponent.cs" />
    <Compile Include="Settings/RimAsyncSettings.cs" />
    <Compile Include="Utils/MultiplayerCompat.cs" />
    <Compile Include="Utils/PerformanceMonitor.cs" />
    <Compile Include="Utils/SmartCache.cs" />
    <Compile Include="Utils/AsyncSafeCollections.cs" />
  </ItemGroup>

</Project> 